#include <iostream>#include <vector>std::vector<std::string> workdir;void printPWD() {    //clear empty    std::vector<std::string> workdir0;    for (int i = 0; i < workdir.size(); i++) {        if (!workdir[i].empty()) {            workdir0.push_back(workdir[i]);        }    }    if (workdir0.empty()) {        std::cout << "/";    }    for (auto i = workdir0.begin(); i != workdir0.end(); i++) {        std::cout << "/";        std::cout << (i->c_str());    }}std::vector<std::string> split(std::string str, std::string pattern) {    std::string::size_type pos;    std::vector<std::string> result;    str += pattern;//扩展字符串以方便操作    int size = str.size();    for (int i = 0; i < size; i++) {        pos = str.find(pattern, i);        if (pos < size) {            std::string s = str.substr(i, pos - i);            result.push_back(s);            i = pos + pattern.size() - 1;        }    }    return result;}int main() {    while (true) {        char input[256];        gets(input);        std::string _in = input;        if (_in == "pwd") {            printPWD();            break;        } else if (_in.find("cd ") == 0) {            //start with cd .            _in = _in.substr(_in.find("cd ") + 3, _in.length() - _in.find("cd "));            if (_in[0] != '/') {                auto p = split(_in, "/");                for (auto it = p.begin(); it != p.end(); it++) {                    if (*it == ".") {                    } else if (*it == "..") {                        if (!workdir.empty()) {                            workdir.pop_back();                        }                    } else {                        if (!it->empty()) {                            workdir.push_back(*it);                        }                    }                }            } else {                workdir.clear();                auto c = split(_in, "/");                workdir.assign(c.begin(), c.end());            }        } else {            //directly input the dir (when begin);            workdir.clear();            auto c = split(input, "/");            for (auto it = c.begin(); it != c.end(); it++) {                if (!it->empty()) {                    workdir.push_back(*it);                }            }        }    }    return 0;}