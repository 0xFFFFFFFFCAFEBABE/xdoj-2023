#include <iostream>#include <vector>#include <algorithm>struct models {    std::vector<int> inputs;    int repeat;};std::vector<models> s;bool test(const models &value1, const models &value2) {    if (value1.repeat == value2.repeat) {        int i = 0;        while (value1.inputs[i] == value2.inputs[i]) { i++; }        return value1.inputs[i] < value2.inputs[i];    }    return value1.repeat > value2.repeat;}int main() {    int N, M;    scanf("%d %d", &N, &M);    for (int i = 0; i < N; ++i) {        models lm;        lm.repeat = 1;        for (int j = 0; j < M; ++j) {            int temp;            scanf("%d", &temp);            lm.inputs.push_back(temp);        }        bool flag = false;        for (int j = 0; j < s.size(); ++j) {            if (lm.inputs == s[j].inputs) {                s[j].repeat++;                flag = true;                break;            }        }        if (!flag) {            s.push_back(lm);        }    }    std::sort(s.begin(), s.end(), test);    printf("%d\n", s.size());    for (int i = 0; i < s.size(); ++i) {        printf("%d ", s[i].repeat);        for (int j = 0; j < s[i].inputs.size(); ++j) {            printf("%d ", s[i].inputs[j]);        }        printf("\n");    }    return 0;}